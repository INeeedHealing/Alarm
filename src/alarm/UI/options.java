/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alarm.UI;

import javax.swing.JFrame;

/**
 *
 * @author Robin Schmid
 */
public class options extends javax.swing.JFrame {

    /**
     * Creates new form options
     */
    public options() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        setKillPs = new javax.swing.JCheckBox();
        setRemPs = new javax.swing.JCheckBox();
        setRem = new javax.swing.JCheckBox();
        setFreq = new javax.swing.JTextField();
        okB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        setFreqPs = new javax.swing.JTextField();
        changePsB = new javax.swing.JButton();
        setRemTime = new javax.swing.JCheckBox();
        setRemUhrzeit = new javax.swing.JFormattedTextField();
        changePassB = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        setAvlTime = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        setKillPs.setText("Programme nach abgelaufener Zeit beenden");
        setKillPs.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                setKillPsAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setKillPs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setKillPsActionPerformed(evt);
            }
        });

        setRemPs.setText("Erinnerung nach Zeit in markierten Programmen");
        setRemPs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRemPsActionPerformed(evt);
            }
        });

        setRem.setText("Erinnerung nach Zeit allgemein");
        setRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRemActionPerformed(evt);
            }
        });

        setFreq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFreqActionPerformed(evt);
            }
        });
        setFreq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                setFreqKeyTyped(evt);
            }
        });

        okB.setText("OK");
        okB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBActionPerformed(evt);
            }
        });

        jLabel1.setText("H채ufigkeit in min");

        jLabel2.setText("H채ufigkeit in min");

        setFreqPs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFreqPsActionPerformed(evt);
            }
        });
        setFreqPs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                setFreqPsKeyTyped(evt);
            }
        });

        changePsB.setText("Programme bearbeiten");
        changePsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePsBActionPerformed(evt);
            }
        });

        setRemTime.setText("Erinnerung um");
        setRemTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRemTimeActionPerformed(evt);
            }
        });

        try {
            setRemUhrzeit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        setRemUhrzeit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRemUhrzeitActionPerformed(evt);
            }
        });
        setRemUhrzeit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                setRemUhrzeitKeyTyped(evt);
            }
        });

        changePassB.setText("Passwort 채ndern");
        changePassB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassBActionPerformed(evt);
            }
        });

        jLabel3.setText("verf체gbare Zeit in min");

        setAvlTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAvlTimeActionPerformed(evt);
            }
        });
        setAvlTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                setAvlTimeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(changePsB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changePassB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(okB)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setAvlTime, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(setRemPs)
                    .addComponent(setRem)
                    .addComponent(setKillPs)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(setFreq, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(setFreqPs, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(setRemTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setRemUhrzeit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(setKillPs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setAvlTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setRemPs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setFreqPs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setRem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(setFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setRemTime)
                    .addComponent(setRemUhrzeit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changePsB)
                    .addComponent(changePassB)
                    .addComponent(okB))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRemActionPerformed
        alarm.Alarm.rem = setRem.isSelected();
    }//GEN-LAST:event_setRemActionPerformed

    private void setFreqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFreqActionPerformed
        alarm.Alarm.freq = Integer.valueOf(setFreq.getText());    }//GEN-LAST:event_setFreqActionPerformed

    private void setFreqPsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFreqPsActionPerformed
        alarm.Alarm.freqPs = Integer.valueOf(setFreqPs.getText());
    }//GEN-LAST:event_setFreqPsActionPerformed

    private void setAvlTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAvlTimeActionPerformed
        alarm.Alarm.avlTime = Integer.valueOf(setAvlTime.getText());
    }//GEN-LAST:event_setAvlTimeActionPerformed

    private void setKillPsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setKillPsActionPerformed
        alarm.Alarm.killPs = setKillPs.isSelected();
    }//GEN-LAST:event_setKillPsActionPerformed

    private void setAvlTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setAvlTimeKeyTyped
        onlyDigits(evt);
    }//GEN-LAST:event_setAvlTimeKeyTyped

    private void setFreqPsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setFreqPsKeyTyped
        onlyDigits(evt);
    }//GEN-LAST:event_setFreqPsKeyTyped

    private void setFreqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setFreqKeyTyped
        onlyDigits(evt);
    }//GEN-LAST:event_setFreqKeyTyped

    private void setRemUhrzeitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setRemUhrzeitKeyTyped
        onlyDigits(evt);
    }//GEN-LAST:event_setRemUhrzeitKeyTyped

    private void setRemPsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRemPsActionPerformed
        alarm.Alarm.remPs = setRemPs.isSelected();
    }//GEN-LAST:event_setRemPsActionPerformed

    private void setRemTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRemTimeActionPerformed
        alarm.Alarm.remTime = setRemTime.isSelected();
    }//GEN-LAST:event_setRemTimeActionPerformed

    private void okBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBActionPerformed
        alarm.Alarm.freq = Integer.valueOf(setFreq.getText());
        alarm.Alarm.avlTime = Integer.valueOf(setAvlTime.getText());
        alarm.Alarm.freqPs = Integer.valueOf(setFreqPs.getText());       
        //<editor-fold defaultstate="collapsed" desc="comment">
//        try {
//            alarm.Alarm.saveOptions();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//</editor-fold>

    }//GEN-LAST:event_okBActionPerformed

    private void changePsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePsBActionPerformed
        programms p = new programms();
        p.setVisible(true);
        p.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_changePsBActionPerformed

    private void changePassBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassBActionPerformed
        changePassword cP = new changePassword();
        cP.setVisible(true);
        cP.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_changePassBActionPerformed

    private void setRemUhrzeitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRemUhrzeitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setRemUhrzeitActionPerformed

    private void setKillPsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_setKillPsAncestorAdded
        //SetUp beim 철ffnen des Fensters
        setAvlTime.setText(String.valueOf(alarm.Alarm.avlTime));
        setFreq.setText(String.valueOf(alarm.Alarm.freq));
        setFreqPs.setText(String.valueOf(alarm.Alarm.freqPs));
        setRemUhrzeit.setText(String.valueOf(alarm.Alarm.remUhrzeit));
        
        setRem.setSelected(alarm.Alarm.rem);
        setRemPs.setSelected(alarm.Alarm.remPs);
        setKillPs.setSelected(alarm.Alarm.killPs);
        setRemTime.setSelected(alarm.Alarm.remTime);
    }//GEN-LAST:event_setKillPsAncestorAdded
    
    void onlyDigits(java.awt.event.KeyEvent evt) {
        char tchar = evt.getKeyChar();
        if (!Character.isDigit(tchar)) {
            evt.consume();
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new options().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changePassB;
    private javax.swing.JButton changePsB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okB;
    private javax.swing.JTextField setAvlTime;
    private javax.swing.JTextField setFreq;
    private javax.swing.JTextField setFreqPs;
    private javax.swing.JCheckBox setKillPs;
    private javax.swing.JCheckBox setRem;
    private javax.swing.JCheckBox setRemPs;
    private javax.swing.JCheckBox setRemTime;
    private javax.swing.JFormattedTextField setRemUhrzeit;
    // End of variables declaration//GEN-END:variables
}
